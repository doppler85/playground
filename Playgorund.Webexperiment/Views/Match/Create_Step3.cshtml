@model Playground.Model.Match

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

@using (Html.BeginForm()) {
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>Match</legend>

        <div class="editor-label">
            @Html.LabelFor(model => model.Game)
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(model => model.GameID, (List<SelectListItem>)ViewBag.Games, new { disabled = true })
            @Html.ValidationMessageFor(model => model.GameID)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.CompetitionType)
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(model => model.CompetitionTypeID, (List<SelectListItem>)ViewBag.CompetitionTypes, new { disabled = true })
            @Html.ValidationMessageFor(model => model.CompetitionTypeID)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Date)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Date)
            @Html.ValidationMessageFor(model => model.Date)
        </div>

        @foreach(var score in Model.Scores)
        {
            var index = Model.Scores.IndexOf(score);
            <div class="editor-label">
                @Html.LabelFor(model => model.Scores[index].Competitor)
            </div>
            if (index == 0)
            {
            <div class="editor-field">
                @Html.DropDownListFor(model => model.Scores[index].CompetitorID, (List<SelectListItem>)ViewBag.MyCompetitors)
                @Html.ValidationMessageFor(model => model.Scores[index].CompetitorID)
            </div>
            }
            else
            {
            <div class="editor-field">
                @Html.DropDownListFor(model => model.Scores[index].CompetitorID, (List<SelectListItem>)ViewBag.OponentCompetitors)
                @Html.ValidationMessageFor(model => model.Scores[index].CompetitorID)
            </div>
            }
            <div class="editor-label">
                @Html.LabelFor(model => model.Scores[index].Score)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.Scores[index].Score)
                @Html.ValidationMessageFor(model => model.Scores[index].Score)
            </div>
        }
        <p>
            <input type="submit" value="Create" />
        </p>
    </fieldset>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
